model Appointment {
    id             String            @id @default(uuid())
    patientId      String
    doctorId       String
    scheduleId     String
    videoCallingId String
    status         AppointmentStatus @default(SCHEDULED)
    paymentStatus  PaymentStatus     @default(UNPAID)
    createdAt      DateTime          @default(now())
    updatedAt      DateTime          @updatedAt

    patient      Patient?      @relation(fields: [patientId], references: [id])
    doctor       Doctor?       @relation(fields: [doctorId], references: [id])
    schedule     Schedule?     @relation(fields: [scheduleId], references: [id])
    payment      Payment?
    prescription Prescription?

    @@map("appointments")
}

model Payment {
    id                 String        @id @default(uuid())
    appointmentId      String        @unique
    amount             Float
    transactionId      String        @unique
    status             PaymentStatus @default(UNPAID)
    paymentGatewayData Json?
    createdAt          DateTime      @default(now())
    updatedAt          DateTime      @updatedAt

    appointment Appointment @relation(fields: [appointmentId], references: [id])

    @@map("payments")
}

model Prescription {
    id            String    @id @default(uuid())
    appointmentId String    @unique
    doctorId      String
    patientId     String
    instructions  String
    followupDate  DateTime?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt

    appointment Appointment @relation(fields: [appointmentId], references: [id])
    doctor      Doctor      @relation(fields: [doctorId], references: [id])

    @@map("prescriptions")
}
